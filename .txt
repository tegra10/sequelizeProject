// Importer les dépendances
const express = require('express');
const bodyParser = require('body-parser');
const Sequelize = require('sequelize');

// Initialiser l'application express
const app = express();
app.use(bodyParser.json());

// Configurer la connexion à la base de données MySQL avec Sequelize
const sequelize = new Sequelize('nom_de_la_base_de_données', 'nom_utilisateur', 'mot_de_passe', {
  host: 'localhost',
  dialect: 'mysql'
});

// Définir le modèle de données avec Sequelize
const User = sequelize.define('user', {
  firstName: {
    type: Sequelize.STRING
  },
  lastName: {
    type: Sequelize.STRING
  }
});

// Créer la table dans la base de données
sequelize.sync()
  .then(() => {
    console.log('La table a été créée avec succès');
  })
  .catch(err => {
    console.error('Erreur lors de la création de la table :', err);
  });

// Définir la route pour la méthode put
app.put('/users/:id', (req, res) => {
  const userId = req.params.id;
  const { firstName, lastName } = req.body;
  User.findByPk(userId)
    .then(user => {
      if (!user) {
        res.status(404).json({ error: 'Utilisateur non trouvé' });
      } else {
        user.firstName = firstName;
        user.lastName = lastName;
        return user.save();
      }
    })
    .then(updatedUser => {
      res.json(updatedUser);
    })
    .catch(err => {
      console.error('Erreur lors de la mise à jour de l\'utilisateur :', err);
      res.status(500).json({ error: 'Erreur lors de la mise à jour de l\'utilisateur' });
    });
});

// Lancer le serveur sur le port 3000
app.listen(3000, () => {
  console.log('Le serveur est en cours d\'exécution sur le port 3000');
});